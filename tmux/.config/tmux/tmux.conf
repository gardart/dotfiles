# --------------#
# tmux-sensible #
# --------------#
# https://github.com/tmux-plugins/tmux-sensible

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# upgrade $TERM
set -g default-terminal "screen-256color"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on


# --------#
# General #
# --------#

# Default shell
set -g default-shell $SHELL

# Mouse
# enable mouse support for switching panes/windows
setw -g mouse on
# set -g mouse on

## Turn off mouse so everything works using terminal on remote machines
#set -g mouse off

# Set windows and page index to base 1
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows when creating/closing new windows
set -g renumber-windows on

# Use vim key bindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in vim
# set -g escape-time 10

# ------------#
# Keybindings #
# ------------#

# Copy-mode
# Enter copy mode using CTRL-B 'Esc'
unbind [
bind Escape copy-mode
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Send command on double press
bind C-a send-prefix
bind C-l send-keys 'C-l'

# Reload tmux.conf on prefix r
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"

# Split panes and remember current path
# bind '\' split-window -h -c '#{pane_current_path}'
bind 'รถ' split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Remember current path when creating new windows
bind c new-window -c '#{pane_current_path}'

# Break pane into new window and keep focus on the current window
bind b break-pane -d

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -n รฐ setw synchronize-panes

# -----------#
# Status bar #
# -----------#

# set-option -g status-justify left
# set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #S #[bg=colour236] '
# set-option -g status-left-length 16
# set-option -g status-bg colour237
# set-option -g status-right '#[bg=colour235]#[fg=colour185] #H #[bg=colour236] #[bg=colour235]#[fg=colour185] %a %R #[bg=colour236]#[fg=colour3] #[bg=colour237] #[bg=colour72] #[]' 

# set-option -g pane-active-border-style fg=colour246
# set-option -g pane-border-style fg=colour238

# set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
# set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# Tmux sessionizer
# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
#bind-key -r i run-shell "tmux neww tmux-cht.sh"
bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
#bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/home/nrdp"

# -------------------#
# Plugins and themes #
# -------------------#

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'
# tpmlugin manager
set -g @plugin 'tmux-plugins/tpm'

# List of tmuxlugins
set -g @plugin 'christoomey/vim-tmux-navigator' # enable navigating between nvim and tmux
set -g @plugin 'tmux-plugins/tmux-resurrect' #ersist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions every 15 minutes
set -g @plugin 'catppuccin/tmux'
#set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha

# Resurrect
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

# Load theme
run  ~/.tmux/plugins/tmux/catppuccin.tmux

# Check if tmux plugin manager is installed, otherwise clone it.
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUXlugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
